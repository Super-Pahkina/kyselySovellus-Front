{"version":3,"sources":["components/Kysymys.js","components/HaeKysely.js","components/Tulosraportti.js","components/Etusivu.js","App.js","reportWebVitals.js","index.js"],"names":["Kysymys","kysymys","value","handleSubmit","handleVastausChange","handleCheckboxChange","handleRadionappulaChange","handleSlider","useState","tyyppi","onSubmit","teksti","id","type","onChange","name","monivalinta","map","m","i","Slider","defaultValue","aria-labelledby","step","min","max","valueLabelDisplay","marks","label","useStyles","makeStyles","div","marginLeft","button","padding","background","margin","color","boxShadow","HaeKysely","props","classes","kysymykset","setKysymykset","indeksi","setIndeksi","syote","vastaus","setVastaus","checkbox","monivalintaVastaus","setMonivalintaVastaus","vastauslista","setVastauslista","viesti","setViesti","virhe","setVirhe","kyselyid","kysely_id","useEffect","fetchData","kysymys_url","fetch","then","Response","json","data","handleIndeksi","saveVastaus","formData","axios","post","kysymys_id","response","status","console","log","saveMonivalintaVastaus","length","className","valinta","Button","a","href","kysely","nimi","kuvaus","event","preventDefault","uusiLista","concat","isChecked","target","checked","JSON","stringify","lista","push","poistolista","filter","f","newValue","theme","Header","Chart","Height","Width","expand","transform","transition","transitions","create","duration","shortest","expandOpen","Tulosraportti","setData","React","expandedId","setExpandedId","otsikko","kysymysLista","setKysymyslista","vastaus_url","get","handleChange","index","mapF","Array","j","b","onko","määrä","mappi","sarake","mapR","radio","x","y","mapS","Grid","container","direction","spacing","grid","item","Kysely","style","display","gridItem","Card","CardHeader","title","IconButton","Icon","clsx","Collapse","in","CardContent","content","Typography","pie","colorScale","domainPadding","height","width","containerComponent","responsive","labelComponent","angle","fill","button2","card","search","textAlign","h1","Etusivu","handleVastaa","handleTulokset","kyselyt","setKyselyt","searchTerm","setSearchTerm","result","piilotettu","placeholder","marginTop","justifyContent","toLowerCase","includes","maxWidth","minWidth","align","onClick","App","nakyma","setNakyma","setKyselyid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cda80b17.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Slider from '@material-ui/core/Slider';\n\nfunction Kysymys({ kysymys, value, handleSubmit, handleVastausChange, handleCheckboxChange, handleRadionappulaChange, handleSlider }) {\n\n    const [arvo, setArvo] = useState('');\n\n    const valit = [\n        {\n          value: 0,\n          label: '0',\n        },\n        {\n          value: 1,\n          label: '1',\n        },\n        {\n          value: 2,\n          label: '2',\n        },\n        {\n          value: 3,\n          label: '3',\n        },\n        {\n          value: 4,\n          label: '4',\n        },\n        {\n          value: 5,\n          label: '5',\n        },\n      ];\n\n// kaikki kysymykset form -> lähetetään tietokantaan kun painetaan \"Jatka\"\n      const muutaArvo = (event, newValue) => {\n          setArvo(newValue);\n          console.log(arvo)\n      }\n\n    if (kysymys.tyyppi === \"teksti\") {\n        return (\n            <div>\n                <form onSubmit={handleSubmit}>\n                    <p></p>{kysymys.teksti} <br></br>\n                    <textarea\n                        id=\"text\"\n                        type=\"text\"\n                        value={value}\n                        onChange={handleVastausChange}\n                    ></textarea> <br></br> \n                    <button type=\"submit\">JATKA</button>\n                </form>\n            </div >\n\n        )\n    } else if (kysymys.tyyppi === \"checkbox\") {\n        return (\n            <div name =\"checkbox\">\n                <form onSubmit={handleSubmit}>\n\n                    <p></p>{kysymys.teksti} <br></br>\n                    {kysymys.monivalinta.map((m, i) =>\n                        <label key={i + 100}>\n                            <input key={m}  type=\"checkbox\" id={i+100} name=\"checkbox\" value={m} onChange={handleCheckboxChange}></input>\n                            {m}<br></br>\n                        </label>\n                    )}\n                    <button type=\"submit\">JATKA</button>\n                </form>\n            </div>\n        )\n\n    } else if (kysymys.tyyppi === \"radionappula\") {\n        return (\n            <div name = \"radio\">\n                <form onSubmit={handleSubmit}>\n                    <p></p>{kysymys.teksti} <br></br>\n                    {kysymys.monivalinta.map((m, i) =>\n                        <label key={i}>\n                            <input  key={m}  type=\"radio\" id={m} name=\"radionappula\" value={m} onChange={handleRadionappulaChange}></input>\n                            {m}<br></br>\n                        </label>\n                    )}\n                    <button type=\"submit\">JATKA</button>\n                </form>\n            </div>\n        )\n    } else if (kysymys.tyyppi === \"skaala\") {\n        return (\n            <div>\n                <form onSubmit={handleSubmit}>\n                    <p></p>{kysymys.teksti} <br></br>\n                    <Slider\n                    defaultValue={1}\n                    aria-labelledby=\"discrete-skaala-slider\"\n                    step={1}\n                    min={0}\n                    max={5}\n                    valueLabelDisplay=\"auto\"\n                    marks = {valit}\n                    onChange={handleVastausChange}\n                    /><br></br> \n                    <button type=\"submit\">JATKA</button>\n                </form>\n            </div >\n\n        )\n    }\n}\n\nexport default Kysymys;","import React, { useState, useEffect } from 'react';\nimport Kysymys from './Kysymys'\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    div: {\n        marginLeft: 20\n    },\n    button: {\n        padding: 10,\n        background: 'white',\n        margin: 5,\n        color: 'black',\n        boxShadow: '0 5px 10px 5px rgba(100, 1, 100, .3)',\n        '&:hover': {\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 50%)',\n\n            color: '#FFF'\n        }\n    }\n});\nfunction HaeKysely(props) {\n    const classes = useStyles();\n    const [kysymykset, setKysymykset] = useState([])\n    const [indeksi, setIndeksi] = useState(0)\n    const [vastaus, setVastaus] = useState({ syote: '', kysymys: {} })\n    const [monivalintaVastaus, setMonivalintaVastaus] = useState({ checkbox: [], kysymys: {} })\n    const [vastauslista, setVastauslista] = useState([])\n    const [viesti, setViesti] = useState('');\n    const [virhe, setVirhe] = useState('');\n    const kyselyid = props.kysely_id\n\n    useEffect(() => { fetchData() }, []);\n\n    let kysymys_url = `https://kyselysovellus.herokuapp.com/kyselyt/${kyselyid}/kysymykset`\n\n    const fetchData = () => {\n        fetch(kysymys_url)\n            .then(Response => Response.json())\n            .then(data => setKysymykset(data))\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        if (kysymykset[indeksi].tyyppi === \"teksti\" || kysymykset[indeksi].tyyppi === \"skaala\") {\n            if (vastaus.syote.length === 0) {\n                setVirhe('Vastaus ei voi olla tyhjä!');\n\n            } else {\n                const uusiLista = vastauslista.concat(vastaus)\n                setVastauslista(uusiLista)\n                saveVastaus(vastaus)\n                setVirhe('');\n                setVastaus({ syote: '', kysymys: {} })\n                handleIndeksi()\n            }\n        } else if (kysymykset[indeksi].tyyppi === \"checkbox\") {\n            if (monivalintaVastaus.checkbox.length === 0) {\n                setVirhe('Vastaus ei voi olla tyhjä!');\n            } else {\n                const uusiLista = vastauslista.concat(monivalintaVastaus)\n                setVastauslista(uusiLista)\n                saveMonivalintaVastaus(monivalintaVastaus)\n                setVirhe('');\n                setMonivalintaVastaus({ checkbox: [], kysymys: {} });\n                handleIndeksi()\n            }\n\n        } else if (kysymykset[indeksi].tyyppi === \"radionappula\") {\n            if (vastaus.syote.length === 0) {\n                setVirhe('Vastaus ei voi olla tyhjä!');\n            } else {\n                const uusiLista = vastauslista.concat(vastaus)\n                setVastauslista(uusiLista)\n                saveVastaus(vastaus)\n                setVirhe('');\n                setVastaus({ syote: '', kysymys: {} })\n                handleIndeksi()\n            }\n        }\n\n\n    }\n\n    const handleVastausChange = (event, newValue) => {\n        if (kysymykset[indeksi].tyyppi === \"skaala\"){\n            setVastaus({ syote: newValue, kysymys: kysymykset[indeksi] })\n        }else{\n            setVastaus({ syote: event.target.value, kysymys: kysymykset[indeksi] })\n        }\n        console.log(vastaus)\n    }\n\n    const handleCheckboxChange = (event) => {\n        let isChecked = event.target.checked\n        if (isChecked) {\n            let lista = [...monivalintaVastaus.checkbox]\n            lista.push(event.target.value)\n            setMonivalintaVastaus({ checkbox: lista, kysymys: kysymykset[indeksi] })\n        } else if (!isChecked) {\n            let lista = [...monivalintaVastaus.checkbox]\n            let poistolista = lista.filter(f => f !== event.target.value)\n            setMonivalintaVastaus({ checkbox: poistolista, kysymys: kysymykset[indeksi] })\n        }\n        console.log(isChecked)\n        console.log(event.target.value)\n        console.log(\"MONIVALINNAT\", JSON.stringify(monivalintaVastaus))\n\n    }\n\n    const handleRadionappulaChange = (event) => {\n        let isChecked = event.target.checked\n        if (isChecked) {\n            setVastaus({ syote: event.target.value, kysymys: kysymykset[indeksi] })\n        } else if (!isChecked) {\n            setVastaus({ syote: \"\", kysymys: kysymykset[indeksi] })\n        }\n        console.log(isChecked)\n        console.log(event.target.value)\n        console.log(\"VASTAUS\", JSON.stringify(vastaus))\n    }\n\n    const handleIndeksi = () => {\n\n        setIndeksi(indeksi + 1)\n    }\n\n    const saveVastaus = () => {\n\n        const formData = {\n            'syote': vastaus.syote,\n            'kysymys': vastaus.kysymys,\n        }\n\n        axios.post(`https://kyselysovellus.herokuapp.com/kyselyt/${kyselyid}/kysymykset/${vastaus.kysymys.kysymys_id}/vastaus`, formData)\n            .then(response => {\n                if (response.status === 200) {\n                    setVastaus({ syote: '', kysymys: '' });\n                    setViesti('Lisättiin');\n\n                } else {\n                    setViesti('Lisäys ei onnistunut');\n                }\n                console.log(viesti);\n            })\n    }\n\n    const saveMonivalintaVastaus = () => {\n\n        const formData = {\n            'checkbox': monivalintaVastaus.checkbox,\n            'kysymys': monivalintaVastaus.kysymys,\n        }\n\n        axios.post(`https://kyselysovellus.herokuapp.com/kyselyt/${kyselyid}/kysymykset/${monivalintaVastaus.kysymys.kysymys_id}/vastaus`, formData)\n            .then(response => {\n                if (response.status === 200) {\n                    setMonivalintaVastaus({ checkbox: [], kysymys: '' });\n                    setViesti('Lisättiin');\n\n                } else {\n                    setViesti('Lisäys ei onnistunut');\n                }\n                console.log(viesti);\n\n            })\n    }\n\n    console.log(indeksi);\n    console.log(kysymykset.length)\n    if (indeksi === kysymykset.length) {\n        return (\n            <div className={classes.div}>\n                <h1>Kiitos kyselyyn vastaamisesta!</h1>\n                <h3>Vastauksesi</h3>\n                <div>\n                    {vastauslista.map((vastaus, i) => {\n                        if (vastaus.kysymys.tyyppi === \"teksti\" || vastaus.kysymys.tyyppi === \"radionappula\" || vastaus.kysymys.tyyppi === \"skaala\") {\n                            return (\n                                <div>\n                                    <b>{vastaus.kysymys.teksti}</b>\n                                    <p key={i}>{vastaus.syote}</p>\n                                </div>)\n                        } else {\n                            return (\n                                <div>\n                                    <b>{vastaus.kysymys.teksti}</b>\n                                    {vastaus.checkbox.map(valinta =>\n                                        <p>{valinta}</p>\n                                    )}\n                                </div>)\n\n\n                        }\n\n\n                    }\n\n                    )} <Button className={classes.button} a href='/'>Palaa etusivulle</Button></div>\n            </div>\n        )\n    } else {\n\n        return (\n            <div className={classes.div}>\n                <h1 >{kysymykset[0].kysely.nimi}</h1>\n                <h2 >{kysymykset[0].kysely.kuvaus}</h2>\n                <p >Tämä on {indeksi + 1} / {kysymykset.length} kysymys</p>\n                <Kysymys kysymys={kysymykset[indeksi]} value={vastaus.syote} handleSubmit={handleSubmit} handleRadionappulaChange={handleRadionappulaChange} handleCheckboxChange={handleCheckboxChange} handleVastausChange={handleVastausChange} ></Kysymys>\n                <h2>{virhe}</h2>\n            </div>\n        )\n    }\n\n}\n\nexport default HaeKysely;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { VictoryBar, VictoryChart, VictoryContainer, VictoryPie, VictoryLabel } from \"victory\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    Header: {\n\n    },\n\n    button: {\n        padding: 10,\n        background: 'white',\n        margin: 5,\n        color: 'black',\n        boxShadow: '0 5px 10px 5px rgba(100, 1, 100, .3)',\n        '&:hover': {\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 50%)',\n\n            color: '#FFF'\n        }\n    },\n\n    Chart: {\n        Height: 300,\n        Width: 300\n    },\n\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest\n        })\n    },\n\n    expandOpen: {\n        transform: 'rotate(180deg)'\n    },\n}));\n\n\nfunction Tulosraportti(props) {\n    const classes = useStyles();\n    const [kysely_id, setKysely_id] = useState(props.kysely_id)\n    const [data, setData] = useState([])\n    const [expandedId, setExpandedId] = React.useState(-1);\n    let otsikko = 0;\n    let i = 0;\n\n    const [kysymysLista, setKysymyslista] = useState([])\n\n    const vastaus_url = `https://kyselysovellus.herokuapp.com/kyselyt/${kysely_id}/vastaukset`\n    const kysymys_url = `https://kyselysovellus.herokuapp.com/kyselyt/${kysely_id}/kysymykset`\n\n    useEffect(() => { fetchData() }, []);\n\n    const fetchData = () => {\n\n        axios.get(vastaus_url)\n            .then(response => setData(response.data))\n\n        axios.get(kysymys_url)\n            .then(response => setKysymyslista(response.data))\n\n\n        console.log(\"LISTA\", JSON.stringify(kysymysLista[0]))\n        console.log(\"DATA\", data)\n    }\n\n    const handleChange = (index) => {\n        setExpandedId(expandedId === index ? -1 : index);\n    };\n\n    const mapF = (index) => {\n        if (index === null) {\n            const mappi = new Array();\n            return mappi;\n        } else {\n            let j = 0;\n            let a = 0;\n            let i = 0;\n            let b = 0;\n            let onko = false;\n            let monivalinta = ({ nimi: [], määrä: [] });\n            while (i < data.length) {\n                if (data[i].kysymys.kysymys_id === index) {\n                    if (data[i].checkbox.length > 0) {\n                        while (b < data[i].kysymys.monivalinta.length) {\n                            monivalinta.nimi.push(data[i].kysymys.monivalinta[b]);\n                            monivalinta.määrä.push(0);\n                            b = b + 1;\n                        }\n                    }\n                    while (j < data[i].checkbox.length) {\n                        while (a < monivalinta.nimi.length) {\n                            if (data[i].checkbox[j] === monivalinta.nimi[a]) {\n                                onko = true;\n                                monivalinta.määrä[a] = monivalinta.määrä[a] + 1\n                            }\n                            a = a + 1;\n                        }\n                        if (!onko) {\n                            monivalinta.nimi.push(data[i].checkbox[j]);\n                            monivalinta.määrä.push(1);\n                        }\n                        onko = false;\n                        a = 0;\n                        j = j + 1;\n                    }\n                    j = 0;\n                }\n                i = i + 1;\n\n            }\n\n            const mappi = new Array();\n            for (i = 0; i < monivalinta.nimi.length; i++) {\n                var sarake = { nimi: monivalinta.nimi[i], määrä: monivalinta.määrä[i] };\n                mappi.push(sarake);\n            }\n            return mappi;\n        }\n    };\n\n    const mapR = (index) => {\n        let a = 0;\n        let i = 0;\n        let onko = false;\n        let monivalinta = ({ nimi: [], määrä: [] });\n        while (i < data.length) {\n            if (data[i].kysymys.kysymys_id === index) {\n                if (data[i].kysymys.tyyppi === \"radionappula\") {\n                    while (a < monivalinta.nimi.length) {\n                        if (data[i].syote === monivalinta.nimi[a]) {\n                            onko = true;\n                            monivalinta.määrä[a] = monivalinta.määrä[a] + 1\n                        }\n                        a = a + 1;\n                    }\n                    if (!onko) {\n                        monivalinta.nimi.push(data[i].syote);\n                        monivalinta.määrä.push(1);\n                    }\n                    onko = false;\n                    a = 0;\n                }\n            }\n            i = i + 1;\n        }\n\n        const radio = new Array();\n        for (i = 0; i < monivalinta.nimi.length; i++) {\n            var nimi = \"\";\n            console.log(\"MÄÄRÄ \", monivalinta.määrä[i]) // vastaajien määrä\n            \n            if(monivalinta.määrä[i] > 0) {\n             nimi = monivalinta.nimi[i] + \" / \" + monivalinta.määrä[i] + \" kpl\"\n            } else {\n                nimi = monivalinta.nimi[i]\n            }\n            var sarake = { x: nimi, y: monivalinta.määrä[i] };\n            radio.push(sarake);\n        }\n    \n        return radio;\n    };\n\n    const mapS = (index) => {\n        let a = 0;\n        let i = 0;\n        let onko = false;\n        let monivalinta = ({ nimi: [], määrä: [] });\n        while (i < data.length) {\n            if (data[i].kysymys.kysymys_id === index) {\n                if (data[i].kysymys.tyyppi === \"skaala\") {\n                    while (a < monivalinta.nimi.length) {\n                        if (data[i].syote === monivalinta.nimi[a]) {\n                            onko = true;\n                            monivalinta.määrä[a] = monivalinta.määrä[a] + 1\n                        }\n                        a = a + 1;\n                    }\n                    if (!onko) {\n                        monivalinta.nimi.push(data[i].syote);\n                        monivalinta.määrä.push(1);\n                    }\n                    onko = false;\n                    a = 0;\n                }\n            }\n            i = i + 1;\n        }\n\n        const radio = new Array();\n        for (i = 0; i < monivalinta.nimi.length; i++) {\n            var nimi = \"\";\n            console.log(\"MÄÄRÄ \", monivalinta.määrä[i]) // vastaajien määrä\n            \n            if(monivalinta.määrä[i] > 0) {\n             nimi = monivalinta.nimi[i] + \" / \" + monivalinta.määrä[i] + \" kpl\"\n            } else {\n                nimi = monivalinta.nimi[i]\n            }\n            var sarake = { x: nimi, y: monivalinta.määrä[i] };\n            radio.push(sarake);\n        }\n    \n        return radio;\n    };\n\n    return (\n        <div>\n            <p></p>\n\n\n            <Grid container\n                direction=\"column\"\n                spacing={1}\n                className={classes.grid}>\n                {kysymysLista.map((kysymys, index) =>\n                    <>\n                        {otsikko === 0 ?\n                            <Grid item key={index} className={classes.Kysely}>\n                                <h1>{kysymysLista[0].kysely.nimi}</h1>\n                                <h2>{kysymysLista[0].kysely.kuvaus}</h2>\n                                <h2>Vastaukset:</h2>\n                                \n                                <Button className={classes.button} a href='/'>Palaa etusivulle</Button>\n                                <span style={{ display: 'none' }}>{otsikko = 1}</span>\n                            </Grid>\n                            :\n                            <></>\n                        }\n                        <Grid item key={index} className={classes.gridItem}>\n\n                            <div>\n                                <Card>\n                                    <CardHeader className={classes.Header}\n                                        title={kysymys.teksti}\n                                    />\n                                    {data.map((vastaus, indeksi) => {\n\n\n                                        if (vastaus.kysymys.kysymys_id === kysymys.kysymys_id) {\n                                            i = i + 1;\n                                            if (vastaus.kysymys.tyyppi === \"teksti\") {\n                                                return (\n                                                    <>\n\n                                                        {i === 1 ?\n                                                            <IconButton className={classes.Icon}\n                                                                className={clsx(classes.expand, {\n                                                                    [classes.expandOpen]: expandedId === index,\n                                                                })}\n                                                                onClick={() => handleChange(index)}\n                                                                aria-expanded={expandedId === index}\n                                                            >\n                                                                <ExpandMoreIcon />\n                                                            </IconButton>\n                                                            :\n                                                            <></>\n                                                        }\n\n                                                        <Collapse in={expandedId === index} >\n\n                                                            <CardContent className={classes.content}>\n                                                                <Typography key={indeksi}>{i}: {vastaus.syote}</Typography>\n                                                            </CardContent>\n                                                        </Collapse>\n                                                    </>\n                                                )\n                                            } else if (vastaus.kysymys.tyyppi === \"radionappula\") {\n                                                return (\n                                                    <>\n\n                                                        {i === 1 ?\n                                                            <IconButton className={classes.Icon}\n                                                                className={clsx(classes.expand, {\n                                                                    [classes.expandOpen]: expandedId === index,\n                                                                })}\n                                                                onClick={() => handleChange(index)}\n                                                                aria-expanded={expandedId === index}\n                                                            >\n                                                                <ExpandMoreIcon />\n                                                            </IconButton>\n                                                            :\n                                                            <></>\n                                                        }\n                                                        <Collapse in={expandedId === index} >\n                                                            {i === 1 ? <CardContent className={classes.content}>\n                                                                <div className={classes.pie}>\n                                                                    <VictoryPie data={mapR(kysymys.kysymys_id)} colorScale=\"qualitative\"  domainPadding={20} height={400} width={1000} containerComponent={<VictoryContainer responsive={false} />}>\n\n                                                                    </VictoryPie>\n                                                                </div>\n                                                            </CardContent>\n                                                                :\n                                                                <></>\n                                                            }\n                                                        </Collapse>\n                                                    </>\n                                                )\n                                            } else if (kysymys.tyyppi === \"checkbox\") {\n                                                return (\n                                                    <>\n                                                        {i === 1 ?\n                                                            <IconButton className={classes.Icon}\n                                                                className={clsx(classes.expand, {\n                                                                    [classes.expandOpen]: expandedId === index,\n                                                                })}\n                                                                onClick={() => handleChange(index)}\n                                                                aria-expanded={expandedId === index}\n                                                            >\n                                                                <ExpandMoreIcon />\n                                                            </IconButton>\n                                                            :\n                                                            <></>\n                                                        }\n                                                        <Collapse in={expandedId === index} >\n                                                            {i === 1 ? <CardContent className={classes.content}>\n                                                                <div>\n                                                                    <VictoryChart domainPadding={20} height={400} width={mapF(kysymys.kysymys_id).length * 120} containerComponent={<VictoryContainer responsive={false} />} labelComponent={<VictoryLabel angle={45} />}>\n                                                                        <VictoryBar style={{\n                                                                            data: { fill: \"#c43a31\" },\n                                                                        }} data={mapF(kysymys.kysymys_id)} x=\"nimi\" y=\"määrä\"\n                                                                        />\n                                                                    </VictoryChart>\n                                                                </div>\n                                                            </CardContent>\n                                                                :\n                                                                <></>\n                                                            }\n                                                        </Collapse>\n                                                    </>\n                                                )\n\n                                            } else if (vastaus.kysymys.tyyppi === \"skaala\") {\n                                                return (\n                                                    <>\n\n                                                        {i === 1 ?\n                                                            <IconButton className={classes.Icon}\n                                                                className={clsx(classes.expand, {\n                                                                    [classes.expandOpen]: expandedId === index,\n                                                                })}\n                                                                onClick={() => handleChange(index)}\n                                                                aria-expanded={expandedId === index}\n                                                            >\n                                                                <ExpandMoreIcon />\n                                                            </IconButton>\n                                                            :\n                                                            <></>\n                                                        }\n                                                        <Collapse in={expandedId === index} >\n                                                            {i === 1 ? <CardContent className={classes.content}>\n                                                                <div className={classes.pie}>\n                                                                    <VictoryPie data={mapS(kysymys.kysymys_id)} colorScale=\"qualitative\"  domainPadding={20} height={400} width={1000} containerComponent={<VictoryContainer responsive={false} />}>\n\n                                                                    </VictoryPie>\n                                                                </div>\n                                                            </CardContent>\n                                                                :\n                                                                <></>\n                                                            }\n                                                        </Collapse>\n                                                    </>\n                                                )\n                                            } else {\n\n                                            }\n\n\n                                        }\n                                    }\n\n                                    )}\n                                </Card>\n                                <span style={{ display: 'none' }}>{i = 0}</span>\n                            </div>\n                        </Grid>\n                    </>\n                )}\n\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default Tulosraportti;","import React, { useState, useEffect } from 'react';\nimport {  makeStyles } from '@material-ui/core/styles';\nimport { Button, CardContent, Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/Card';\nconst useStyles = makeStyles({\nbutton: {\n  padding: 10,\n  background: 'white',\n  margin: 5,\n  color: 'blue',\n  boxShadow: '0 5px 10px 5px rgba(100, 1, 100, .3)',\n  '&:hover': {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 50%)',\n    \n    color: '#FFF'\n  }},\n  button2: {\n    padding: 10,\n    background: 'white',\n    color: 'red',\n    boxShadow: '0 5px 10px 5px rgba(100, 1, 100, .3)',\n    '&:hover': {\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 50%)',\n      \n      color: '#FFF'\n    }},\n    card: {\n      background: 'linear-gradient(90deg, #FE6B8B 30%, #FF8E53 90%)',\n      color: 'white',\n      marginLeft: 20\n    },\n    content: {\n      background: 'white'\n    },\n    search: {\n      textAlign: 'center',\n      \n    },\n    h1: {\n      textAlign: 'center'\n      \n    }\n\n});\n\nfunction Etusivu({handleVastaa, handleTulokset}){\n    const classes = useStyles();\n    const [kyselyt, setKyselyt] = useState([])\n    const [searchTerm, setSearchTerm] = useState('');\n    let kysely_url = 'https://kyselysovellus.herokuapp.com/kyselyt'\n\n    const fetchData = () => {\n      fetch(kysely_url)\n        .then(Response => Response.json())\n        .then(data => setKyselyt(data))\n\n        const result = kyselyt.filter(kysely => kysely.piilotettu !== true)\n        console.log(\"RESULT\", JSON.stringify(result))\n        setKyselyt(result);\n\n\n    };\n  \n    useEffect(() => { fetchData(); }, []);\n\n    return(\n        <div>\n        <h1 className = {classes.h1}>Kaikki kyselyt</h1>\n       <p className = {classes.search}> <input \n             placeholder=\"Hae kysely\"\n             type=\"text\"\n             onChange={(event) => {\n               setSearchTerm(event.target.value);\n             }}\n      /></p>\n      \n      <Grid container spacing ={4} style = {{marginTop:0.1, justifyContent:'center'}}>\n        {kyselyt.filter((kysely)=>{\n          if(searchTerm === '') {\n            return kyselyt\n          } else if(kysely.nimi.toLowerCase().includes(searchTerm.toLowerCase())) {\n            return kyselyt\n          }\n          \n        }).map(kysely =>{\n\n        if(kysely.piilotettu) {\n          return(\n            <div></div>\n          )\n        }  \n          \n          return(\n            \n        <Grid item key = {kysely.kysely_id}>\n          <Card className= {classes.card} style = { {marginTop: 10, maxWidth: 300, minWidth: 200}}>\n            <CardHeader title = 'kysely'>\n              <Typography align ='center'>{kysely.nimi}</Typography>\n              </CardHeader>\n\n            <CardContent >\n            <Button className = {classes.button} onClick={() => handleVastaa(kysely.kysely_id)}>VASTAA</Button>\n            <Button className = {classes.button2} onClick={() => handleTulokset(kysely.kysely_id)}>TULOKSET</Button>\n            </CardContent>\n            </Card>\n            </Grid>\n            \n        )\n        \n        })}\n      </Grid> </div>\n    )\n    \n}\n\nexport default Etusivu;","import React, { useState } from 'react';\nimport HaeKysely from './components/HaeKysely';\nimport Tulosraportti from './components/Tulosraportti';\n//import { Button } from '@material-ui/core';\nimport Etusivu from './components/Etusivu'\n\nfunction App() {\n\n  const [nakyma, setNakyma] = useState(\"etusivu\")\n  const [kyselyid, setKyselyid] = useState('')\n\n  const handleVastaa = (id) => {\n    setNakyma(\"vastaussivu\")\n    setKyselyid(id)\n    console.log(\"HANDLEVASTAA\", nakyma)\n\n  }\n\n  const handleTulokset = (id) => {\n    setNakyma(\"tulossivu\")\n    setKyselyid(id)\n    console.log(\"HANDLE TULOKSET\", nakyma)\n\n  }\n\n  if (nakyma === \"etusivu\") {\n    return (\n      <Etusivu handleVastaa={handleVastaa} handleTulokset={handleTulokset}></Etusivu>\n    )\n\n  } else if (nakyma === \"tulossivu\") {\n    return (\n      <div>\n        <Tulosraportti kysely_id={kyselyid}></Tulosraportti>\n        \n      </div>\n    )\n\n  } else if (nakyma === \"vastaussivu\") {\n    return (\n      <div>\n        <HaeKysely kysely_id={kyselyid}></HaeKysely>\n       \n      </div>\n\n    )\n\n  }\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}