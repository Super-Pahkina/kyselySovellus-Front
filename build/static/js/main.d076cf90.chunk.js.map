{"version":3,"sources":["components/Kysymys.js","components/HaeKysely.js","components/Tulosraportti.js","components/Etusivu.js","App.js","reportWebVitals.js","index.js"],"names":["Kysymys","kysymys","value","handleSubmit","handleVastausChange","handleCheckboxChange","handleRadionappulaChange","tyyppi","onSubmit","teksti","id","type","onChange","name","monivalinta","map","m","i","useStyles","makeStyles","div","marginLeft","button","padding","background","margin","color","boxShadow","HaeKysely","props","classes","useState","kysymykset","setKysymykset","indeksi","setIndeksi","syote","vastaus","setVastaus","checkbox","monivalintaVastaus","setMonivalintaVastaus","vastauslista","setVastauslista","viesti","setViesti","virhe","setVirhe","kyselyid","kysely_id","useEffect","fetchData","kysymys_url","fetch","then","Response","json","data","handleIndeksi","saveVastaus","formData","axios","post","kysymys_id","response","status","console","log","saveMonivalintaVastaus","length","className","valinta","Button","a","href","kysely","nimi","kuvaus","event","preventDefault","uusiLista","concat","isChecked","target","checked","JSON","stringify","lista","push","poistolista","filter","f","theme","Header","Chart","Height","Width","expand","transform","transition","transitions","create","duration","shortest","expandOpen","Tulosraportti","setData","React","expandedId","setExpandedId","otsikko","kysymysLista","setKysymyslista","vastaus_url","get","handleChange","index","mapF","Array","j","b","onko","määrä","mappi","sarake","mapR","radio","x","y","Grid","container","direction","spacing","grid","item","Kysely","style","display","gridItem","Card","CardHeader","title","IconButton","Icon","clsx","Collapse","in","CardContent","content","Typography","colorScale","domainPadding","height","width","containerComponent","responsive","labelComponent","angle","fill","button2","card","search","textAlign","h1","Etusivu","handleVastaa","handleTulokset","kyselyt","setKyselyt","searchTerm","setSearchTerm","result","piilotettu","placeholder","marginTop","justifyContent","toLowerCase","includes","maxWidth","minWidth","align","onClick","App","nakyma","setNakyma","setKyselyid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d076cf90.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Kysymys({ kysymys, value, handleSubmit, handleVastausChange, handleCheckboxChange, handleRadionappulaChange }) {\r\n\r\n// kaikki kysymykset form -> lähetetään tietokantaan kun painetaan \"Jatka\"\r\n\r\n    if (kysymys.tyyppi === \"teksti\") {\r\n        return (\r\n            <div>\r\n                <form onSubmit={handleSubmit}>\r\n                    <p></p>{kysymys.teksti} <br></br>\r\n                    <textarea\r\n                        id=\"text\"\r\n                        type=\"text\"\r\n                        value={value}\r\n                        onChange={handleVastausChange}\r\n                    ></textarea> <br></br> \r\n                    <button type=\"submit\">JATKA</button>\r\n                </form>\r\n            </div >\r\n\r\n        )\r\n    } else if (kysymys.tyyppi === \"checkbox\") {\r\n        return (\r\n            <div name =\"checkbox\">\r\n                <form onSubmit={handleSubmit}>\r\n\r\n                    <p></p>{kysymys.teksti} <br></br>\r\n                    {kysymys.monivalinta.map((m, i) =>\r\n                        <label key={i + 100}>\r\n                            <input key={m}  type=\"checkbox\" id={i+100} name=\"checkbox\" value={m} onChange={handleCheckboxChange}></input>\r\n                            {m}<br></br>\r\n                        </label>\r\n                    )}\r\n                    <button type=\"submit\">JATKA</button>\r\n                </form>\r\n            </div>\r\n        )\r\n\r\n    } else if (kysymys.tyyppi === \"radionappula\") {\r\n        return (\r\n            <div name = \"radio\">\r\n                <form onSubmit={handleSubmit}>\r\n                    <p></p>{kysymys.teksti} <br></br>\r\n                    {kysymys.monivalinta.map((m, i) =>\r\n                        <label key={i}>\r\n                            <input  key={m}  type=\"radio\" id={m} name=\"radionappula\" value={m} onChange={handleRadionappulaChange}></input>\r\n                            {m}<br></br>\r\n                        </label>\r\n                    )}\r\n                    <button type=\"submit\">JATKA</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Kysymys;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Kysymys from './Kysymys'\r\nimport axios from 'axios';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    div: {\r\n        marginLeft: 20\r\n    },\r\n    button: {\r\n        padding: 10,\r\n        background: 'white',\r\n        margin: 5,\r\n        color: 'black',\r\n        boxShadow: '0 5px 10px 5px rgba(100, 1, 100, .3)',\r\n        '&:hover': {\r\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 50%)',\r\n\r\n            color: '#FFF'\r\n        }\r\n    }\r\n});\r\nfunction HaeKysely(props) {\r\n    const classes = useStyles();\r\n    const [kysymykset, setKysymykset] = useState([])\r\n    const [indeksi, setIndeksi] = useState(0)\r\n    const [vastaus, setVastaus] = useState({ syote: '', kysymys: {} })\r\n    const [monivalintaVastaus, setMonivalintaVastaus] = useState({ checkbox: [], kysymys: {} })\r\n    const [vastauslista, setVastauslista] = useState([])\r\n    const [viesti, setViesti] = useState('');\r\n    const [virhe, setVirhe] = useState('');\r\n    const kyselyid = props.kysely_id\r\n\r\n    useEffect(() => { fetchData() }, []);\r\n\r\n    let kysymys_url = `http://kyselysovellus.herokuapp.com/kyselyt/${kyselyid}/kysymykset`\r\n\r\n    const fetchData = () => {\r\n        fetch(kysymys_url)\r\n            .then(Response => Response.json())\r\n            .then(data => setKysymykset(data))\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        if (kysymykset[indeksi].tyyppi === \"teksti\") {\r\n            if (vastaus.syote.length === 0) {\r\n                setVirhe('Vastaus ei voi olla tyhjä!');\r\n\r\n            } else {\r\n                const uusiLista = vastauslista.concat(vastaus)\r\n                setVastauslista(uusiLista)\r\n                saveVastaus(vastaus)\r\n                setVirhe('');\r\n                setVastaus({ syote: '', kysymys: {} })\r\n                handleIndeksi()\r\n            }\r\n        } else if (kysymykset[indeksi].tyyppi === \"checkbox\") {\r\n            if (monivalintaVastaus.checkbox.length === 0) {\r\n                setVirhe('Vastaus ei voi olla tyhjä!');\r\n            } else {\r\n                const uusiLista = vastauslista.concat(monivalintaVastaus)\r\n                setVastauslista(uusiLista)\r\n                saveMonivalintaVastaus(monivalintaVastaus)\r\n                setVirhe('');\r\n                setMonivalintaVastaus({ checkbox: [], kysymys: {} });\r\n                handleIndeksi()\r\n            }\r\n\r\n        } else if (kysymykset[indeksi].tyyppi === \"radionappula\") {\r\n            if (vastaus.syote.length === 0) {\r\n                setVirhe('Vastaus ei voi olla tyhjä!');\r\n            } else {\r\n                const uusiLista = vastauslista.concat(vastaus)\r\n                setVastauslista(uusiLista)\r\n                saveVastaus(vastaus)\r\n                setVirhe('');\r\n                setVastaus({ syote: '', kysymys: {} })\r\n                handleIndeksi()\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const handleVastausChange = (event) => {\r\n        setVastaus({ syote: event.target.value, kysymys: kysymykset[indeksi] })\r\n        console.log(vastaus)\r\n    }\r\n\r\n    const handleCheckboxChange = (event) => {\r\n        let isChecked = event.target.checked\r\n        if (isChecked) {\r\n            let lista = [...monivalintaVastaus.checkbox]\r\n            lista.push(event.target.value)\r\n            setMonivalintaVastaus({ checkbox: lista, kysymys: kysymykset[indeksi] })\r\n        } else if (!isChecked) {\r\n            let lista = [...monivalintaVastaus.checkbox]\r\n            let poistolista = lista.filter(f => f !== event.target.value)\r\n            setMonivalintaVastaus({ checkbox: poistolista, kysymys: kysymykset[indeksi] })\r\n        }\r\n        console.log(isChecked)\r\n        console.log(event.target.value)\r\n        console.log(\"MONIVALINNAT\", JSON.stringify(monivalintaVastaus))\r\n\r\n    }\r\n\r\n    const handleRadionappulaChange = (event) => {\r\n        let isChecked = event.target.checked\r\n        if (isChecked) {\r\n            setVastaus({ syote: event.target.value, kysymys: kysymykset[indeksi] })\r\n        } else if (!isChecked) {\r\n            setVastaus({ syote: \"\", kysymys: kysymykset[indeksi] })\r\n        }\r\n        console.log(isChecked)\r\n        console.log(event.target.value)\r\n        console.log(\"VASTAUS\", JSON.stringify(vastaus))\r\n    }\r\n\r\n    const handleIndeksi = () => {\r\n\r\n        setIndeksi(indeksi + 1)\r\n    }\r\n\r\n    const saveVastaus = () => {\r\n\r\n        const formData = {\r\n            'syote': vastaus.syote,\r\n            'kysymys': vastaus.kysymys,\r\n        }\r\n\r\n        axios.post(`http://kyselysovellus.herokuapp.com/kyselyt/${kyselyid}/kysymykset/${vastaus.kysymys.kysymys_id}/vastaus`, formData)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    setVastaus({ syote: '', kysymys: '' });\r\n                    setViesti('Lisättiin');\r\n\r\n                } else {\r\n                    setViesti('Lisäys ei onnistunut');\r\n                }\r\n                console.log(viesti);\r\n            })\r\n    }\r\n\r\n    const saveMonivalintaVastaus = () => {\r\n\r\n        const formData = {\r\n            'checkbox': monivalintaVastaus.checkbox,\r\n            'kysymys': monivalintaVastaus.kysymys,\r\n        }\r\n\r\n        axios.post(`http://kyselysovellus.herokuapp.com/kyselyt/${kyselyid}/kysymykset/${monivalintaVastaus.kysymys.kysymys_id}/vastaus`, formData)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    setMonivalintaVastaus({ checkbox: [], kysymys: '' });\r\n                    setViesti('Lisättiin');\r\n\r\n                } else {\r\n                    setViesti('Lisäys ei onnistunut');\r\n                }\r\n                console.log(viesti);\r\n\r\n            })\r\n    }\r\n\r\n\r\n    if (indeksi === kysymykset.length) {\r\n        return (\r\n            <div className={classes.div}>\r\n                <h1>Kiitos kyselyyn vastaamisesta!</h1>\r\n                <h3>Vastauksesi</h3>\r\n                <div>\r\n                    {vastauslista.map((vastaus, i) => {\r\n                        if (vastaus.kysymys.tyyppi === \"teksti\" || vastaus.kysymys.tyyppi === \"radionappula\") {\r\n                            return (\r\n                                <div>\r\n                                    <b>{vastaus.kysymys.teksti}</b>\r\n                                    <p key={i}>{vastaus.syote}</p>\r\n                                </div>)\r\n                        } else {\r\n                            return (\r\n                                <div>\r\n                                    <b>{vastaus.kysymys.teksti}</b>\r\n                                    {vastaus.checkbox.map(valinta =>\r\n                                        <p>{valinta}</p>\r\n                                    )}\r\n                                </div>)\r\n\r\n\r\n                        }\r\n\r\n\r\n                    }\r\n\r\n                    )} <Button className={classes.button} a href='/'>Palaa etusivulle</Button></div>\r\n            </div>\r\n        )\r\n    } else {\r\n\r\n        return (\r\n            <div className={classes.div}>\r\n                <h1 >{kysymykset[0].kysely.nimi}</h1>\r\n                <h2 >{kysymykset[0].kysely.kuvaus}</h2>\r\n                <p >Tämä on {indeksi + 1} / {kysymykset.length} kysymys</p>\r\n                <Kysymys kysymys={kysymykset[indeksi]} value={vastaus.syote} handleSubmit={handleSubmit} handleRadionappulaChange={handleRadionappulaChange} handleCheckboxChange={handleCheckboxChange} handleVastausChange={handleVastausChange} ></Kysymys>\r\n                <h2>{virhe}</h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default HaeKysely;\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { VictoryBar, VictoryChart, VictoryContainer, VictoryPie, VictoryLabel } from \"victory\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    Header: {\r\n\r\n    },\r\n\r\n    button: {\r\n        padding: 10,\r\n        background: 'white',\r\n        margin: 5,\r\n        color: 'black',\r\n        boxShadow: '0 5px 10px 5px rgba(100, 1, 100, .3)',\r\n        '&:hover': {\r\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 50%)',\r\n\r\n            color: '#FFF'\r\n        }\r\n    },\r\n\r\n    Chart: {\r\n        Height: 300,\r\n        Width: 300\r\n    },\r\n\r\n    /*    Kysely: {\r\n            position: \"-webkit-sticky\",\r\n            position: \"sticky\",\r\n            top: 0,\r\n            backgroundColor: \"#FFFFFF\"\r\n        },\r\n    */\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest\r\n        })\r\n    },\r\n\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)'\r\n    },\r\n}));\r\n\r\n\r\nfunction Tulosraportti(props) {\r\n    const classes = useStyles();\r\n    const [kysely_id, setKysely_id] = useState(props.kysely_id)\r\n    const [data, setData] = useState([])\r\n    const [expandedId, setExpandedId] = React.useState(-1);\r\n    let otsikko = 0;\r\n    let i = 0;\r\n\r\n    const [kysymysLista, setKysymyslista] = useState([])\r\n\r\n    const vastaus_url = `http://kyselysovellus.herokuapp.com/kyselyt/${kysely_id}/vastaukset`\r\n    const kysymys_url = `http://kyselysovellus.herokuapp.com/kyselyt/${kysely_id}/kysymykset`\r\n\r\n    useEffect(() => { fetchData() }, []);\r\n\r\n    const fetchData = () => {\r\n\r\n        axios.get(vastaus_url)\r\n            .then(response => setData(response.data))\r\n\r\n        axios.get(kysymys_url)\r\n            .then(response => setKysymyslista(response.data))\r\n\r\n\r\n        console.log(\"LISTA\", JSON.stringify(kysymysLista[0]))\r\n        console.log(\"DATA\", data)\r\n    }\r\n\r\n    const handleChange = (index) => {\r\n        setExpandedId(expandedId === index ? -1 : index);\r\n    };\r\n\r\n    const mapF = (index) => {\r\n        if (index === null) {\r\n            const mappi = new Array();\r\n            return mappi;\r\n        } else {\r\n            let j = 0;\r\n            let a = 0;\r\n            let i = 0;\r\n            let b = 0;\r\n            let onko = false;\r\n            let monivalinta = ({ nimi: [], määrä: [] });\r\n            while (i < data.length) {\r\n                if (data[i].kysymys.kysymys_id === index) {\r\n                    if (data[i].checkbox.length > 0) {\r\n                        while (b < data[i].kysymys.monivalinta.length) {\r\n                            monivalinta.nimi.push(data[i].kysymys.monivalinta[b]);\r\n                            monivalinta.määrä.push(0);\r\n                            b = b + 1;\r\n                        }\r\n                    }\r\n                    while (j < data[i].checkbox.length) {\r\n                        while (a < monivalinta.nimi.length) {\r\n                            if (data[i].checkbox[j] === monivalinta.nimi[a]) {\r\n                                onko = true;\r\n                                monivalinta.määrä[a] = monivalinta.määrä[a] + 1\r\n                            }\r\n                            a = a + 1;\r\n                        }\r\n                        if (!onko) {\r\n                            monivalinta.nimi.push(data[i].checkbox[j]);\r\n                            monivalinta.määrä.push(1);\r\n                        }\r\n                        onko = false;\r\n                        a = 0;\r\n                        j = j + 1;\r\n                    }\r\n                    j = 0;\r\n                }\r\n                i = i + 1;\r\n\r\n            }\r\n\r\n            const mappi = new Array();\r\n            for (i = 0; i < monivalinta.nimi.length; i++) {\r\n                var sarake = { nimi: monivalinta.nimi[i], määrä: monivalinta.määrä[i] };\r\n                mappi.push(sarake);\r\n            }\r\n            return mappi;\r\n        }\r\n    };\r\n\r\n    const mapR = (index) => {\r\n        let a = 0;\r\n        let i = 0;\r\n        let onko = false;\r\n        let monivalinta = ({ nimi: [], määrä: [] });\r\n        while (i < data.length) {\r\n            if (data[i].kysymys.kysymys_id === index) {\r\n                if (data[i].kysymys.tyyppi === \"radionappula\") {\r\n                    while (a < monivalinta.nimi.length) {\r\n                        if (data[i].syote === monivalinta.nimi[a]) {\r\n                            onko = true;\r\n                            monivalinta.määrä[a] = monivalinta.määrä[a] + 1\r\n                        }\r\n                        a = a + 1;\r\n                    }\r\n                    if (!onko) {\r\n                        monivalinta.nimi.push(data[i].syote);\r\n                        monivalinta.määrä.push(1);\r\n                    }\r\n                    onko = false;\r\n                    a = 0;\r\n                }\r\n            }\r\n            i = i + 1;\r\n        }\r\n\r\n        const radio = new Array();\r\n        for (i = 0; i < monivalinta.nimi.length; i++) {\r\n            var nimi = \"\";\r\n            console.log(\"MÄÄRÄ \", monivalinta.määrä[i]) // vastaajien määrä\r\n            \r\n            if(monivalinta.määrä[i] > 0) {\r\n             nimi = monivalinta.nimi[i] + \"/ \" + monivalinta.määrä[i] + \" kpl\"\r\n            } else {\r\n                nimi = monivalinta.nimi[i]\r\n            }\r\n            var sarake = { x: nimi, y: monivalinta.määrä[i] };\r\n            radio.push(sarake);\r\n        }\r\n    \r\n        return radio;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <p></p>\r\n\r\n\r\n            <Grid container\r\n                direction=\"column\"\r\n                spacing={1}\r\n                className={classes.grid}>\r\n                {kysymysLista.map((kysymys, index) =>\r\n                    <>\r\n                        {otsikko === 0 ?\r\n                            <Grid item key={index} className={classes.Kysely}>\r\n                                <h1>{kysymysLista[0].kysely.nimi}</h1>\r\n                                <h2>{kysymysLista[0].kysely.kuvaus}</h2>\r\n                                <h2>Vastaukset:</h2>\r\n                                \r\n                                <Button className={classes.button} a href='/'>Palaa etusivulle</Button>\r\n                                <span style={{ display: 'none' }}>{otsikko = 1}</span>\r\n                            </Grid>\r\n                            :\r\n                            <></>\r\n                        }\r\n                        <Grid item key={index} className={classes.gridItem}>\r\n\r\n                            <div>\r\n                                <Card>\r\n                                    <CardHeader className={classes.Header}\r\n                                        title={kysymys.teksti}\r\n                                    />\r\n                                    {data.map((vastaus, indeksi) => {\r\n\r\n\r\n                                        if (vastaus.kysymys.kysymys_id === kysymys.kysymys_id) {\r\n                                            i = i + 1;\r\n                                            if (vastaus.kysymys.tyyppi === \"teksti\") {\r\n                                                return (\r\n                                                    <>\r\n\r\n                                                        {i === 1 ?\r\n                                                            <IconButton className={classes.Icon}\r\n                                                                className={clsx(classes.expand, {\r\n                                                                    [classes.expandOpen]: expandedId === index,\r\n                                                                })}\r\n                                                                onClick={() => handleChange(index)}\r\n                                                                aria-expanded={expandedId === index}\r\n                                                            >\r\n                                                                <ExpandMoreIcon />\r\n                                                            </IconButton>\r\n                                                            :\r\n                                                            <></>\r\n                                                        }\r\n\r\n                                                        <Collapse in={expandedId === index} >\r\n\r\n                                                            <CardContent className={classes.content}>\r\n                                                                <Typography key={indeksi}>{i}: {vastaus.syote}</Typography>\r\n                                                            </CardContent>\r\n                                                        </Collapse>\r\n                                                    </>\r\n                                                )\r\n                                            } else if (vastaus.kysymys.tyyppi === \"radionappula\") {\r\n                                                return (\r\n                                                    <>\r\n\r\n                                                        {i === 1 ?\r\n                                                            <IconButton className={classes.Icon}\r\n                                                                className={clsx(classes.expand, {\r\n                                                                    [classes.expandOpen]: expandedId === index,\r\n                                                                })}\r\n                                                                onClick={() => handleChange(index)}\r\n                                                                aria-expanded={expandedId === index}\r\n                                                            >\r\n                                                                <ExpandMoreIcon />\r\n                                                            </IconButton>\r\n                                                            :\r\n                                                            <></>\r\n                                                        }\r\n                                                        <Collapse in={expandedId === index} >\r\n                                                            {i === 1 ? <CardContent className={classes.content}>\r\n                                                                <div>\r\n                                                                    <VictoryPie data={mapR(kysymys.kysymys_id) }\r\n                                                                     colorScale=\"qualitative\" domainPadding={20} height={400} width={500}\r\n                                                                      containerComponent={<VictoryContainer responsive={false} />}>\r\n\r\n                                                                    </VictoryPie>\r\n                                                                </div>\r\n                                                            </CardContent>\r\n                                                                :\r\n                                                                <></>\r\n                                                            }\r\n                                                        </Collapse>\r\n                                                    </>\r\n                                                )\r\n                                            } else if (kysymys.tyyppi === \"checkbox\") {\r\n                                                return (\r\n                                                    <>\r\n                                                        {i === 1 ?\r\n                                                            <IconButton className={classes.Icon}\r\n                                                                className={clsx(classes.expand, {\r\n                                                                    [classes.expandOpen]: expandedId === index,\r\n                                                                })}\r\n                                                                onClick={() => handleChange(index)}\r\n                                                                aria-expanded={expandedId === index}\r\n                                                            >\r\n                                                                <ExpandMoreIcon />\r\n                                                            </IconButton>\r\n                                                            :\r\n                                                            <></>\r\n                                                        }\r\n                                                        <Collapse in={expandedId === index} >\r\n                                                            {i === 1 ? <CardContent className={classes.content}>\r\n                                                                <div>\r\n                                                                    <VictoryChart domainPadding={20} height={400} width={mapF(kysymys.kysymys_id).length * 120} containerComponent={<VictoryContainer responsive={false} />} labelComponent={<VictoryLabel angle={45} />}>\r\n                                                                        <VictoryBar style={{\r\n                                                                            data: { fill: \"#c43a31\" },\r\n                                                                        }} data={mapF(kysymys.kysymys_id)} x=\"nimi\" y=\"määrä\"\r\n                                                                        />\r\n                                                                    </VictoryChart>\r\n                                                                </div>\r\n                                                            </CardContent>\r\n                                                                :\r\n                                                                <></>\r\n                                                            }\r\n                                                        </Collapse>\r\n                                                    </>\r\n                                                )\r\n\r\n                                            } else {\r\n\r\n                                            }\r\n\r\n\r\n                                        }\r\n                                    }\r\n\r\n                                    )}\r\n                                </Card>\r\n                                <span style={{ display: 'none' }}>{i = 0}</span>\r\n                            </div>\r\n                        </Grid>\r\n                    </>\r\n                )}\r\n\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tulosraportti;","import React, { useState, useEffect } from 'react';\r\nimport {  makeStyles } from '@material-ui/core/styles';\r\nimport { Button, CardContent, Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/Card';\r\nconst useStyles = makeStyles({\r\nbutton: {\r\n  padding: 10,\r\n  background: 'white',\r\n  margin: 5,\r\n  color: 'blue',\r\n  boxShadow: '0 5px 10px 5px rgba(100, 1, 100, .3)',\r\n  '&:hover': {\r\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 50%)',\r\n    \r\n    color: '#FFF'\r\n  }},\r\n  button2: {\r\n    padding: 10,\r\n    background: 'white',\r\n    color: 'red',\r\n    boxShadow: '0 5px 10px 5px rgba(100, 1, 100, .3)',\r\n    '&:hover': {\r\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 50%)',\r\n      \r\n      color: '#FFF'\r\n    }},\r\n    card: {\r\n      background: 'linear-gradient(90deg, #FE6B8B 30%, #FF8E53 90%)',\r\n      color: 'white',\r\n      marginLeft: 20\r\n    },\r\n    content: {\r\n      background: 'white'\r\n    },\r\n    search: {\r\n      textAlign: 'center',\r\n      \r\n    },\r\n    h1: {\r\n      textAlign: 'center'\r\n      \r\n    }\r\n\r\n});\r\n\r\nfunction Etusivu({handleVastaa, handleTulokset}){\r\n    const classes = useStyles();\r\n    const [kyselyt, setKyselyt] = useState([])\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    let kysely_url = 'http://kyselysovellus.herokuapp.com/kyselyt'\r\n\r\n    const fetchData = () => {\r\n      fetch(kysely_url)\r\n        .then(Response => Response.json())\r\n        .then(data => setKyselyt(data))\r\n\r\n        const result = kyselyt.filter(kysely => kysely.piilotettu !== true)\r\n        console.log(\"RESULT\", JSON.stringify(result))\r\n        setKyselyt(result);\r\n\r\n\r\n    };\r\n  \r\n    useEffect(() => { fetchData(); }, []);\r\n\r\n    return(\r\n        <div>\r\n        <h1 className = {classes.h1}>Kaikki kyselyt</h1>\r\n       <p className = {classes.search}> <input \r\n             placeholder=\"Hae kysely\"\r\n             type=\"text\"\r\n             onChange={(event) => {\r\n               setSearchTerm(event.target.value);\r\n             }}\r\n      /></p>\r\n      \r\n      <Grid container spacing ={4} style = {{marginTop:0.1, justifyContent:'center'}}>\r\n        {kyselyt.filter((kysely)=>{\r\n          if(searchTerm === '') {\r\n            return kyselyt\r\n          } else if(kysely.nimi.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n            return kyselyt\r\n          }\r\n          \r\n        }).map(kysely =>{\r\n\r\n        if(kysely.piilotettu) {\r\n          return(\r\n            <div></div>\r\n          )\r\n        }  \r\n          \r\n          return(\r\n            \r\n        <Grid item key = {kysely.kysely_id}>\r\n          <Card className= {classes.card} style = { {marginTop: 10, maxWidth: 300, minWidth: 200}}>\r\n            <CardHeader title = 'kysely'>\r\n              <Typography align ='center'>{kysely.nimi}</Typography>\r\n              </CardHeader>\r\n\r\n            <CardContent >\r\n            <Button className = {classes.button} onClick={() => handleVastaa(kysely.kysely_id)}>VASTAA</Button>\r\n            <Button className = {classes.button2} onClick={() => handleTulokset(kysely.kysely_id)}>TULOKSET</Button>\r\n            </CardContent>\r\n            </Card>\r\n            </Grid>\r\n            \r\n        )\r\n        \r\n        })}\r\n      </Grid> </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Etusivu;","import React, { useState } from 'react';\r\nimport HaeKysely from './components/HaeKysely';\r\nimport Tulosraportti from './components/Tulosraportti';\r\n//import { Button } from '@material-ui/core';\r\nimport Etusivu from './components/Etusivu'\r\n\r\nfunction App() {\r\n\r\n  const [nakyma, setNakyma] = useState(\"etusivu\")\r\n  const [kyselyid, setKyselyid] = useState('')\r\n\r\n  const handleVastaa = (id) => {\r\n    setNakyma(\"vastaussivu\")\r\n    setKyselyid(id)\r\n    console.log(\"HANDLEVASTAA\", nakyma)\r\n\r\n  }\r\n\r\n  const handleTulokset = (id) => {\r\n    setNakyma(\"tulossivu\")\r\n    setKyselyid(id)\r\n    console.log(\"HANDLE TULOKSET\", nakyma)\r\n\r\n  }\r\n\r\n  if (nakyma === \"etusivu\") {\r\n    return (\r\n      <Etusivu handleVastaa={handleVastaa} handleTulokset={handleTulokset}></Etusivu>\r\n    )\r\n\r\n  } else if (nakyma === \"tulossivu\") {\r\n    return (\r\n      <div>\r\n        <Tulosraportti kysely_id={kyselyid}></Tulosraportti>\r\n        \r\n      </div>\r\n    )\r\n\r\n  } else if (nakyma === \"vastaussivu\") {\r\n    return (\r\n      <div>\r\n        <HaeKysely kysely_id={kyselyid}></HaeKysely>\r\n       \r\n      </div>\r\n\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}