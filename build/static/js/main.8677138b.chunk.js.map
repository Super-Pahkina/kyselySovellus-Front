{"version":3,"sources":["components/Kysymys.js","components/HaeKysely.js","components/Tulosraportti.js","components/Etusivu.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","form","width","Kysymys","kysymys","value","handleSubmit","handleVastausChange","handleCheckboxChange","handleRadionappulaChange","classes","handleSlider","tyyppi","onSubmit","teksti","id","type","onChange","name","monivalinta","map","m","i","className","Paper","style","padding","margin","Slider","defaultValue","aria-labelledby","step","min","max","valueLabelDisplay","marks","label","div","marginLeft","button","background","color","boxShadow","HaeKysely","props","useState","kysymykset","setKysymykset","indeksi","setIndeksi","syote","vastaus","setVastaus","checkbox","monivalintaVastaus","setMonivalintaVastaus","vastauslista","setVastauslista","viesti","setViesti","virhe","setVirhe","kyselyid","kysely_id","useEffect","fetchData","kysymys_url","fetch","then","Response","json","data","handleIndeksi","saveVastaus","formData","axios","post","kysymys_id","response","status","console","log","saveMonivalintaVastaus","length","valinta","Button","a","href","kysely","nimi","kuvaus","event","preventDefault","uusiLista","concat","isChecked","target","checked","JSON","stringify","lista","push","poistolista","filter","f","newValue","Header","Chart","Height","Width","expand","transform","transition","transitions","create","duration","shortest","expandOpen","Tulosraportti","setData","React","expandedId","setExpandedId","otsikko","kysymysLista","setKysymyslista","vastaus_url","get","handleChange","index","mapF","Array","j","b","onko","määrä","mappi","sarake","mapR","radio","x","y","mapS","Grid","container","direction","spacing","grid","item","Kysely","display","gridItem","Card","CardHeader","title","IconButton","Icon","clsx","Collapse","in","CardContent","content","Typography","pie","colorScale","domainPadding","height","containerComponent","responsive","labelComponent","angle","fill","button2","card","search","textAlign","h1","Etusivu","handleVastaa","handleTulokset","kyselyt","setKyselyt","searchTerm","setSearchTerm","result","piilotettu","placeholder","marginTop","justifyContent","toLowerCase","includes","maxWidth","minWidth","align","onClick","App","nakyma","setNakyma","setKyselyid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8677138b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        width: 400,\n    },\n\n}));\n\nfunction Kysymys({ kysymys, value, handleSubmit, handleVastausChange, handleCheckboxChange, handleRadionappulaChange, handleSlider }) {\n\n    const classes = useStyles();\n\n    const valit = [\n        {\n          value: 1,\n          label: '1',\n        },\n        {\n          value: 2,\n          label: '2',\n        },\n        {\n          value: 3,\n          label: '3',\n        },\n        {\n          value: 4,\n          label: '4',\n        },\n        {\n          value: 5,\n          label: '5',\n        },\n      ];\n\n// kaikki kysymykset form -> lähetetään tietokantaan kun painetaan \"Jatka\"\n    if (kysymys.tyyppi === \"teksti\") {\n        return (\n            <div>\n                <form onSubmit={handleSubmit}>\n                    <p></p>{kysymys.teksti} <br></br>\n                    <textarea\n                        id=\"text\"\n                        type=\"text\"\n                        value={value}\n                        onChange={handleVastausChange}\n                    ></textarea> <br></br> \n                    <button type=\"submit\">JATKA</button>\n                </form>\n            </div >\n\n        )\n    } else if (kysymys.tyyppi === \"checkbox\") {\n        return (\n            <div name =\"checkbox\">\n                <form onSubmit={handleSubmit}>\n\n                    <p></p>{kysymys.teksti} <br></br>\n                    {kysymys.monivalinta.map((m, i) =>\n                        <label key={i + 100}>\n                            <input key={m}  type=\"checkbox\" id={i+100} name=\"checkbox\" value={m} onChange={handleCheckboxChange}></input>\n                            {m}<br></br>\n                        </label>\n                    )}\n                    <button type=\"submit\">JATKA</button>\n                </form>\n            </div>\n        )\n\n    } else if (kysymys.tyyppi === \"radionappula\") {\n        return (\n            <div name = \"radio\">\n                <form onSubmit={handleSubmit} className={classes.form}>\n                    <p></p>{kysymys.teksti} <br></br>\n                    {kysymys.monivalinta.map((m, i) =>\n                        <label key={i}>\n                            <input  key={m}  type=\"radio\" id={m} name=\"radionappula\" value={m} onChange={handleRadionappulaChange}></input>\n                            {m}<br></br>\n                        </label>\n                    )}\n                    <button type=\"submit\">JATKA</button>\n                </form>\n            </div>\n        )\n    } else if (kysymys.tyyppi === \"skaala\") {\n        return (\n            <div>\n                <Paper style={ {padding:'10px', margin:'30px', width:'600px'} }>\n                <form onSubmit={handleSubmit}>\n                    <p></p>{kysymys.teksti} <br></br>\n                    \n                    <Slider\n                    defaultValue={1}\n                    aria-labelledby=\"discrete-skaala-slider\"\n                    step={1}\n                    min={1}\n                    max={5}\n                    valueLabelDisplay=\"auto\"\n                    marks = {valit}\n                    onChange={handleVastausChange}\n                    /><br></br> \n                    <button type=\"submit\">JATKA</button>\n                </form>\n                </Paper>\n            </div >\n\n        )\n    }\n\n\n}\n\nexport default Kysymys;","import React, { useState, useEffect } from 'react';\nimport Kysymys from './Kysymys'\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    div: {\n        marginLeft: 20\n    },\n    button: {\n        padding: 10,\n        background: 'white',\n        margin: 5,\n        color: 'black',\n        boxShadow: '0 5px 10px 5px rgba(100, 1, 100, .3)',\n        '&:hover': {\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 50%)',\n\n            color: '#FFF'\n        }\n    }\n});\nfunction HaeKysely(props) {\n    const classes = useStyles();\n    const [kysymykset, setKysymykset] = useState([])\n    const [indeksi, setIndeksi] = useState(0)\n    const [vastaus, setVastaus] = useState({ syote: '', kysymys: {} })\n    const [monivalintaVastaus, setMonivalintaVastaus] = useState({ checkbox: [], kysymys: {} })\n    const [vastauslista, setVastauslista] = useState([])\n    const [viesti, setViesti] = useState('');\n    const [virhe, setVirhe] = useState('');\n    const kyselyid = props.kysely_id\n\n    useEffect(() => { fetchData() }, []);\n\n    let kysymys_url = `https://kyselysovellus.herokuapp.com/kyselyt/${kyselyid}/kysymykset`\n\n    const fetchData = () => {\n        fetch(kysymys_url)\n            .then(Response => Response.json())\n            .then(data => setKysymykset(data))\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        if (kysymykset[indeksi].tyyppi === \"teksti\" || kysymykset[indeksi].tyyppi === \"skaala\") {\n            if (vastaus.syote.length === 0) {\n                setVirhe('Vastaus ei voi olla tyhjä!');\n\n            } else {\n                const uusiLista = vastauslista.concat(vastaus)\n                setVastauslista(uusiLista)\n                saveVastaus(vastaus)\n                setVirhe('');\n                setVastaus({ syote: '', kysymys: {} })\n                handleIndeksi()\n            }\n        } else if (kysymykset[indeksi].tyyppi === \"checkbox\") {\n            if (monivalintaVastaus.checkbox.length === 0) {\n                setVirhe('Vastaus ei voi olla tyhjä!');\n            } else {\n                const uusiLista = vastauslista.concat(monivalintaVastaus)\n                setVastauslista(uusiLista)\n                saveMonivalintaVastaus(monivalintaVastaus)\n                setVirhe('');\n                setMonivalintaVastaus({ checkbox: [], kysymys: {} });\n                handleIndeksi()\n            }\n\n        } else if (kysymykset[indeksi].tyyppi === \"radionappula\") {\n            if (vastaus.syote.length === 0) {\n                setVirhe('Vastaus ei voi olla tyhjä!');\n            } else {\n                const uusiLista = vastauslista.concat(vastaus)\n                setVastauslista(uusiLista)\n                saveVastaus(vastaus)\n                setVirhe('');\n                setVastaus({ syote: '', kysymys: {} })\n                handleIndeksi()\n            }\n        }\n\n\n    }\n\n    const handleVastausChange = (event, newValue) => {\n        if (kysymykset[indeksi].tyyppi === \"skaala\"){\n            setVastaus({ syote: newValue, kysymys: kysymykset[indeksi] })\n        }else{\n            setVastaus({ syote: event.target.value, kysymys: kysymykset[indeksi] })\n        }\n        console.log(vastaus)\n    }\n\n    const handleCheckboxChange = (event) => {\n        let isChecked = event.target.checked\n        if (isChecked) {\n            let lista = [...monivalintaVastaus.checkbox]\n            lista.push(event.target.value)\n            setMonivalintaVastaus({ checkbox: lista, kysymys: kysymykset[indeksi] })\n        } else if (!isChecked) {\n            let lista = [...monivalintaVastaus.checkbox]\n            let poistolista = lista.filter(f => f !== event.target.value)\n            setMonivalintaVastaus({ checkbox: poistolista, kysymys: kysymykset[indeksi] })\n        }\n        console.log(isChecked)\n        console.log(event.target.value)\n        console.log(\"MONIVALINNAT\", JSON.stringify(monivalintaVastaus))\n\n    }\n\n    const handleRadionappulaChange = (event) => {\n        let isChecked = event.target.checked\n        if (isChecked) {\n            setVastaus({ syote: event.target.value, kysymys: kysymykset[indeksi] })\n        } else if (!isChecked) {\n            setVastaus({ syote: \"\", kysymys: kysymykset[indeksi] })\n        }\n        console.log(isChecked)\n        console.log(event.target.value)\n        console.log(\"VASTAUS\", JSON.stringify(vastaus))\n    }\n\n    const handleIndeksi = () => {\n\n        setIndeksi(indeksi + 1)\n    }\n\n    const saveVastaus = () => {\n\n        const formData = {\n            'syote': vastaus.syote,\n            'kysymys': vastaus.kysymys,\n        }\n\n        axios.post(`https://kyselysovellus.herokuapp.com/kyselyt/${kyselyid}/kysymykset/${vastaus.kysymys.kysymys_id}/vastaus`, formData)\n            .then(response => {\n                if (response.status === 200) {\n                    setVastaus({ syote: '', kysymys: '' });\n                    setViesti('Lisättiin');\n\n                } else {\n                    setViesti('Lisäys ei onnistunut');\n                }\n                console.log(viesti);\n            })\n    }\n\n    const saveMonivalintaVastaus = () => {\n\n        const formData = {\n            'checkbox': monivalintaVastaus.checkbox,\n            'kysymys': monivalintaVastaus.kysymys,\n        }\n\n        axios.post(`https://kyselysovellus.herokuapp.com/kyselyt/${kyselyid}/kysymykset/${monivalintaVastaus.kysymys.kysymys_id}/vastaus`, formData)\n            .then(response => {\n                if (response.status === 200) {\n                    setMonivalintaVastaus({ checkbox: [], kysymys: '' });\n                    setViesti('Lisättiin');\n\n                } else {\n                    setViesti('Lisäys ei onnistunut');\n                }\n                console.log(viesti);\n\n            })\n    }\n\n    console.log(indeksi);\n    console.log(kysymykset.length)\n    if (indeksi === kysymykset.length) {\n        return (\n            <div className={classes.div}>\n                <h1>Kiitos kyselyyn vastaamisesta!</h1>\n                <h3>Vastauksesi</h3>\n                <div>\n                    {vastauslista.map((vastaus, i) => {\n                        if (vastaus.kysymys.tyyppi === \"teksti\" || vastaus.kysymys.tyyppi === \"radionappula\" || vastaus.kysymys.tyyppi === \"skaala\") {\n                            return (\n                                <div>\n                                    <b>{vastaus.kysymys.teksti}</b>\n                                    <p key={i}>{vastaus.syote}</p>\n                                </div>)\n                        } else {\n                            return (\n                                <div>\n                                    <b>{vastaus.kysymys.teksti}</b>\n                                    {vastaus.checkbox.map(valinta =>\n                                        <p>{valinta}</p>\n                                    )}\n                                </div>)\n\n\n                        }\n\n\n                    }\n\n                    )} <Button className={classes.button} a href='/'>Palaa etusivulle</Button></div>\n            </div>\n        )\n    } else {\n\n        return (\n            <div className={classes.div}>\n                <h1 >{kysymykset[0].kysely.nimi}</h1>\n                <h2 >{kysymykset[0].kysely.kuvaus}</h2>\n                <p >Tämä on {indeksi + 1} / {kysymykset.length} kysymys</p>\n                <Kysymys kysymys={kysymykset[indeksi]} value={vastaus.syote} handleSubmit={handleSubmit} handleRadionappulaChange={handleRadionappulaChange} handleCheckboxChange={handleCheckboxChange} handleVastausChange={handleVastausChange} ></Kysymys>\n                <h2>{virhe}</h2>\n            </div>\n        )\n    }\n\n}\n\nexport default HaeKysely;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { VictoryBar, VictoryChart, VictoryContainer, VictoryPie, VictoryLabel } from \"victory\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    Header: {\n\n    },\n\n    button: {\n        padding: 10,\n        background: 'white',\n        margin: 5,\n        color: 'black',\n        boxShadow: '0 5px 10px 5px rgba(100, 1, 100, .3)',\n        '&:hover': {\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 50%)',\n\n            color: '#FFF'\n        }\n    },\n\n    Chart: {\n        Height: 300,\n        Width: 300\n    },\n\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest\n        })\n    },\n\n    expandOpen: {\n        transform: 'rotate(180deg)'\n    },\n}));\n\n\nfunction Tulosraportti(props) {\n    const classes = useStyles();\n    const [kysely_id, setKysely_id] = useState(props.kysely_id)\n    const [data, setData] = useState([])\n    const [expandedId, setExpandedId] = React.useState(-1);\n    let otsikko = 0;\n    let i = 0;\n\n    const [kysymysLista, setKysymyslista] = useState([])\n\n    const vastaus_url = `https://kyselysovellus.herokuapp.com/kyselyt/${kysely_id}/vastaukset`\n    const kysymys_url = `https://kyselysovellus.herokuapp.com/kyselyt/${kysely_id}/kysymykset`\n\n    useEffect(() => { fetchData() }, []);\n\n    const fetchData = () => {\n\n        axios.get(vastaus_url)\n            .then(response => setData(response.data))\n\n        axios.get(kysymys_url)\n            .then(response => setKysymyslista(response.data))\n\n\n        console.log(\"LISTA\", JSON.stringify(kysymysLista[0]))\n        console.log(\"DATA\", data)\n    }\n\n    const handleChange = (index) => {\n        setExpandedId(expandedId === index ? -1 : index);\n    };\n\n    const mapF = (index) => {\n        if (index === null) {\n            const mappi = new Array();\n            return mappi;\n        } else {\n            let j = 0;\n            let a = 0;\n            let i = 0;\n            let b = 0;\n            let onko = false;\n            let monivalinta = ({ nimi: [], määrä: [] });\n            while (i < data.length) {\n                if (data[i].kysymys.kysymys_id === index) {\n                    if (data[i].checkbox.length > 0) {\n                        while (b < data[i].kysymys.monivalinta.length) {\n                            monivalinta.nimi.push(data[i].kysymys.monivalinta[b]);\n                            monivalinta.määrä.push(0);\n                            b = b + 1;\n                        }\n                    }\n                    while (j < data[i].checkbox.length) {\n                        while (a < monivalinta.nimi.length) {\n                            if (data[i].checkbox[j] === monivalinta.nimi[a]) {\n                                onko = true;\n                                monivalinta.määrä[a] = monivalinta.määrä[a] + 1\n                            }\n                            a = a + 1;\n                        }\n                        if (!onko) {\n                            monivalinta.nimi.push(data[i].checkbox[j]);\n                            monivalinta.määrä.push(1);\n                        }\n                        onko = false;\n                        a = 0;\n                        j = j + 1;\n                    }\n                    j = 0;\n                }\n                i = i + 1;\n\n            }\n\n            const mappi = new Array();\n            for (i = 0; i < monivalinta.nimi.length; i++) {\n                var sarake = { nimi: monivalinta.nimi[i], määrä: monivalinta.määrä[i] };\n                mappi.push(sarake);\n            }\n            return mappi;\n        }\n    };\n\n    const mapR = (index) => {\n        let a = 0;\n        let i = 0;\n        let onko = false;\n        let monivalinta = ({ nimi: [], määrä: [] });\n        while (i < data.length) {\n            if (data[i].kysymys.kysymys_id === index) {\n                if (data[i].kysymys.tyyppi === \"radionappula\") {\n                    while (a < monivalinta.nimi.length) {\n                        if (data[i].syote === monivalinta.nimi[a]) {\n                            onko = true;\n                            monivalinta.määrä[a] = monivalinta.määrä[a] + 1\n                        }\n                        a = a + 1;\n                    }\n                    if (!onko) {\n                        monivalinta.nimi.push(data[i].syote);\n                        monivalinta.määrä.push(1);\n                    }\n                    onko = false;\n                    a = 0;\n                }\n            }\n            i = i + 1;\n        }\n\n        const radio = new Array();\n        for (i = 0; i < monivalinta.nimi.length; i++) {\n            var nimi = \"\";\n            console.log(\"MÄÄRÄ \", monivalinta.määrä[i]) // vastaajien määrä\n            \n            if(monivalinta.määrä[i] > 0) {\n             nimi = monivalinta.nimi[i] + \" / \" + monivalinta.määrä[i] + \" kpl\"\n            } else {\n                nimi = monivalinta.nimi[i]\n            }\n            var sarake = { x: nimi, y: monivalinta.määrä[i] };\n            radio.push(sarake);\n        }\n    \n        return radio;\n    };\n\n    const mapS = (index) => {\n        let a = 0;\n        let i = 0;\n        let onko = false;\n        let monivalinta = ({ nimi: [], määrä: [] });\n        while (i < data.length) {\n            if (data[i].kysymys.kysymys_id === index) {\n                if (data[i].kysymys.tyyppi === \"skaala\") {\n                    while (a < monivalinta.nimi.length) {\n                        if (data[i].syote === monivalinta.nimi[a]) {\n                            onko = true;\n                            monivalinta.määrä[a] = monivalinta.määrä[a] + 1\n                        }\n                        a = a + 1;\n                    }\n                    if (!onko) {\n                        monivalinta.nimi.push(data[i].syote);\n                        monivalinta.määrä.push(1);\n                    }\n                    onko = false;\n                    a = 0;\n                }\n            }\n            i = i + 1;\n        }\n\n        const radio = new Array();\n        for (i = 0; i < monivalinta.nimi.length; i++) {\n            var nimi = \"\";\n            console.log(\"MÄÄRÄ \", monivalinta.määrä[i]) // vastaajien määrä\n            \n            if(monivalinta.määrä[i] > 0) {\n             nimi = monivalinta.nimi[i] + \" / \" + monivalinta.määrä[i] + \" kpl\"\n            } else {\n                nimi = monivalinta.nimi[i]\n            }\n            var sarake = { x: nimi, y: monivalinta.määrä[i] };\n            radio.push(sarake);\n        }\n    \n        return radio;\n    };\n\n    return (\n        <div>\n            <p></p>\n\n\n            <Grid container\n                direction=\"column\"\n                spacing={1}\n                className={classes.grid}>\n                {kysymysLista.map((kysymys, index) =>\n                    <>\n                        {otsikko === 0 ?\n                            <Grid item key={index} className={classes.Kysely}>\n                                <h1>{kysymysLista[0].kysely.nimi}</h1>\n                                <h2>{kysymysLista[0].kysely.kuvaus}</h2>\n                                <h2>Vastaukset:</h2>\n                                \n                                <Button className={classes.button} a href='/'>Palaa etusivulle</Button>\n                                <span style={{ display: 'none' }}>{otsikko = 1}</span>\n                            </Grid>\n                            :\n                            <></>\n                        }\n                        <Grid item key={index} className={classes.gridItem}>\n\n                            <div>\n                                <Card>\n                                    <CardHeader className={classes.Header}\n                                        title={kysymys.teksti}\n                                    />\n                                    {data.map((vastaus, indeksi) => {\n\n\n                                        if (vastaus.kysymys.kysymys_id === kysymys.kysymys_id) {\n                                            i = i + 1;\n                                            if (vastaus.kysymys.tyyppi === \"teksti\") {\n                                                return (\n                                                    <>\n\n                                                        {i === 1 ?\n                                                            <IconButton className={classes.Icon}\n                                                                className={clsx(classes.expand, {\n                                                                    [classes.expandOpen]: expandedId === index,\n                                                                })}\n                                                                onClick={() => handleChange(index)}\n                                                                aria-expanded={expandedId === index}\n                                                            >\n                                                                <ExpandMoreIcon />\n                                                            </IconButton>\n                                                            :\n                                                            <></>\n                                                        }\n\n                                                        <Collapse in={expandedId === index} >\n\n                                                            <CardContent className={classes.content}>\n                                                                <Typography key={indeksi}>{i}: {vastaus.syote}</Typography>\n                                                            </CardContent>\n                                                        </Collapse>\n                                                    </>\n                                                )\n                                            } else if (vastaus.kysymys.tyyppi === \"radionappula\") {\n                                                return (\n                                                    <>\n\n                                                        {i === 1 ?\n                                                            <IconButton className={classes.Icon}\n                                                                className={clsx(classes.expand, {\n                                                                    [classes.expandOpen]: expandedId === index,\n                                                                })}\n                                                                onClick={() => handleChange(index)}\n                                                                aria-expanded={expandedId === index}\n                                                            >\n                                                                <ExpandMoreIcon />\n                                                            </IconButton>\n                                                            :\n                                                            <></>\n                                                        }\n                                                        <Collapse in={expandedId === index} >\n                                                            {i === 1 ? <CardContent className={classes.content}>\n                                                                <div className={classes.pie}>\n                                                                    <VictoryPie data={mapR(kysymys.kysymys_id)} colorScale=\"qualitative\"  domainPadding={20} height={400} width={1000} containerComponent={<VictoryContainer responsive={false} />}>\n\n                                                                    </VictoryPie>\n                                                                </div>\n                                                            </CardContent>\n                                                                :\n                                                                <></>\n                                                            }\n                                                        </Collapse>\n                                                    </>\n                                                )\n                                            } else if (kysymys.tyyppi === \"checkbox\") {\n                                                return (\n                                                    <>\n                                                        {i === 1 ?\n                                                            <IconButton className={classes.Icon}\n                                                                className={clsx(classes.expand, {\n                                                                    [classes.expandOpen]: expandedId === index,\n                                                                })}\n                                                                onClick={() => handleChange(index)}\n                                                                aria-expanded={expandedId === index}\n                                                            >\n                                                                <ExpandMoreIcon />\n                                                            </IconButton>\n                                                            :\n                                                            <></>\n                                                        }\n                                                        <Collapse in={expandedId === index} >\n                                                            {i === 1 ? <CardContent className={classes.content}>\n                                                                <div>\n                                                                    <VictoryChart domainPadding={20} height={400} width={mapF(kysymys.kysymys_id).length * 120} containerComponent={<VictoryContainer responsive={false} />} labelComponent={<VictoryLabel angle={45} />}>\n                                                                        <VictoryBar style={{\n                                                                            data: { fill: \"#c43a31\" },\n                                                                        }} data={mapF(kysymys.kysymys_id)} x=\"nimi\" y=\"määrä\"\n                                                                        />\n                                                                    </VictoryChart>\n                                                                </div>\n                                                            </CardContent>\n                                                                :\n                                                                <></>\n                                                            }\n                                                        </Collapse>\n                                                    </>\n                                                )\n\n                                            } else if (vastaus.kysymys.tyyppi === \"skaala\") {\n                                                return (\n                                                    <>\n\n                                                        {i === 1 ?\n                                                            <IconButton className={classes.Icon}\n                                                                className={clsx(classes.expand, {\n                                                                    [classes.expandOpen]: expandedId === index,\n                                                                })}\n                                                                onClick={() => handleChange(index)}\n                                                                aria-expanded={expandedId === index}\n                                                            >\n                                                                <ExpandMoreIcon />\n                                                            </IconButton>\n                                                            :\n                                                            <></>\n                                                        }\n                                                        <Collapse in={expandedId === index} >\n                                                            {i === 1 ? <CardContent className={classes.content}>\n                                                                <div className={classes.pie}>\n                                                                    <VictoryPie data={mapS(kysymys.kysymys_id)} colorScale=\"qualitative\"  domainPadding={20} height={400} width={1000} containerComponent={<VictoryContainer responsive={false} />}>\n\n                                                                    </VictoryPie>\n                                                                </div>\n                                                            </CardContent>\n                                                                :\n                                                                <></>\n                                                            }\n                                                        </Collapse>\n                                                    </>\n                                                )\n                                            } else {\n\n                                            }\n\n\n                                        }\n                                    }\n\n                                    )}\n                                </Card>\n                                <span style={{ display: 'none' }}>{i = 0}</span>\n                            </div>\n                        </Grid>\n                    </>\n                )}\n\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default Tulosraportti;","import React, { useState, useEffect } from 'react';\nimport {  makeStyles } from '@material-ui/core/styles';\nimport { Button, CardContent, Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/Card';\nconst useStyles = makeStyles({\nbutton: {\n  padding: 10,\n  background: 'white',\n  margin: 5,\n  color: 'blue',\n  boxShadow: '0 5px 10px 5px rgba(100, 1, 100, .3)',\n  '&:hover': {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 50%)',\n    \n    color: '#FFF'\n  }},\n  button2: {\n    padding: 10,\n    background: 'white',\n    color: 'red',\n    boxShadow: '0 5px 10px 5px rgba(100, 1, 100, .3)',\n    '&:hover': {\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 50%)',\n      \n      color: '#FFF'\n    }},\n    card: {\n      background: 'linear-gradient(90deg, #FE6B8B 30%, #FF8E53 90%)',\n      color: 'white',\n      marginLeft: 20\n    },\n    content: {\n      background: 'white'\n    },\n    search: {\n      textAlign: 'center',\n      \n    },\n    h1: {\n      textAlign: 'center'\n      \n    }\n\n});\n\nfunction Etusivu({handleVastaa, handleTulokset}){\n    const classes = useStyles();\n    const [kyselyt, setKyselyt] = useState([])\n    const [searchTerm, setSearchTerm] = useState('');\n    let kysely_url = 'https://kyselysovellus.herokuapp.com/kyselyt'\n\n    const fetchData = () => {\n      fetch(kysely_url)\n        .then(Response => Response.json())\n        .then(data => setKyselyt(data))\n\n        const result = kyselyt.filter(kysely => kysely.piilotettu !== true)\n        console.log(\"RESULT\", JSON.stringify(result))\n        setKyselyt(result);\n\n\n    };\n  \n    useEffect(() => { fetchData(); }, []);\n\n    return(\n        <div>\n        <h1 className = {classes.h1}>Kaikki kyselyt</h1>\n       <p className = {classes.search}> <input \n             placeholder=\"Hae kysely\"\n             type=\"text\"\n             onChange={(event) => {\n               setSearchTerm(event.target.value);\n             }}\n      /></p>\n      \n      <Grid container spacing ={4} style = {{marginTop:0.1, justifyContent:'center'}}>\n        {kyselyt.filter((kysely)=>{\n          if(searchTerm === '') {\n            return kyselyt\n          } else if(kysely.nimi.toLowerCase().includes(searchTerm.toLowerCase())) {\n            return kyselyt\n          }\n          \n        }).map(kysely =>{\n\n        if(kysely.piilotettu) {\n          return(\n            <div></div>\n          )\n        }  \n          \n          return(\n            \n        <Grid item key = {kysely.kysely_id}>\n          <Card className= {classes.card} style = { {marginTop: 10, maxWidth: 300, minWidth: 200}}>\n            <CardHeader title = 'kysely'>\n              <Typography align ='center'>{kysely.nimi}</Typography>\n              </CardHeader>\n\n            <CardContent >\n            <Button className = {classes.button} onClick={() => handleVastaa(kysely.kysely_id)}>VASTAA</Button>\n            <Button className = {classes.button2} onClick={() => handleTulokset(kysely.kysely_id)}>TULOKSET</Button>\n            </CardContent>\n            </Card>\n            </Grid>\n            \n        )\n        \n        })}\n      </Grid> </div>\n    )\n    \n}\n\nexport default Etusivu;","import React, { useState } from 'react';\nimport HaeKysely from './components/HaeKysely';\nimport Tulosraportti from './components/Tulosraportti';\n//import { Button } from '@material-ui/core';\nimport Etusivu from './components/Etusivu'\n\nfunction App() {\n\n  const [nakyma, setNakyma] = useState(\"etusivu\")\n  const [kyselyid, setKyselyid] = useState('')\n\n  const handleVastaa = (id) => {\n    setNakyma(\"vastaussivu\")\n    setKyselyid(id)\n    console.log(\"HANDLEVASTAA\", nakyma)\n\n  }\n\n  const handleTulokset = (id) => {\n    setNakyma(\"tulossivu\")\n    setKyselyid(id)\n    console.log(\"HANDLE TULOKSET\", nakyma)\n\n  }\n\n  if (nakyma === \"etusivu\") {\n    return (\n      <Etusivu handleVastaa={handleVastaa} handleTulokset={handleTulokset}></Etusivu>\n    )\n\n  } else if (nakyma === \"tulossivu\") {\n    return (\n      <div>\n        <Tulosraportti kysely_id={kyselyid}></Tulosraportti>\n        \n      </div>\n    )\n\n  } else if (nakyma === \"vastaussivu\") {\n    return (\n      <div>\n        <HaeKysely kysely_id={kyselyid}></HaeKysely>\n       \n      </div>\n\n    )\n\n  }\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}